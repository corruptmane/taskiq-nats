name: Testing taskiq-redis

on: push

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run black check
        run: poetry run black --check .
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run flake8 check
        run: poetry run flake8 --count .
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run mypy check
        run: poetry run mypy .
  pytest:
    strategy:
      matrix:
        py_version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.py_version }}"
      - name: Update pip
        run: python -m pip install -U pip
      - name: Install poetry
        run: python -m pip install poetry
      - name: Install deps
        run: poetry install
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Update docker-compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: "2.16.0"
      - name: docker compose up
        run: docker-compose up -d --wait
      - name: Run pytest check
        run: poetry run pytest -vv -n auto --cov="taskiq_nats" .
      - name: Generate report
        run: poetry run coverage xml
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        if: matrix.py_version == '3.9'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
      - name: Stop containers
        if: always()
        run: docker-compose down
